diff --git a/agent/api/task.go b/agent/api/task.go
index 99b2de0..d031c67 100644
--- a/agent/api/task.go
+++ b/agent/api/task.go
@@ -309,11 +309,19 @@ func (task *Task) dockerHostConfig(container *Container, dockerContainerMap map[
 		return nil, &HostConfigError{err.Error()}
 	}
 
+	logOptsConfig := make(map[string]string)
+
+	logConfig := docker.LogConfig{
+		Type:   "awslogs",
+		Config: logOptsConfig,
+	}
+
 	hostConfig := &docker.HostConfig{
 		Links:        dockerLinkArr,
 		Binds:        binds,
 		PortBindings: dockerPortMap,
 		VolumesFrom:  volumesFrom,
+		LogConfig:    logConfig,
 	}
 
 	if container.DockerConfig.HostConfig != nil {
diff --git a/agent/engine/docker_task_engine.go b/agent/engine/docker_task_engine.go
index 0de2f2e..2fc0332 100644
--- a/agent/engine/docker_task_engine.go
+++ b/agent/engine/docker_task_engine.go
@@ -17,6 +17,8 @@ package engine
 
 import (
 	"errors"
+	"fmt"
+	"strings"
 	"sync"
 	"time"
 
@@ -463,6 +465,10 @@ func (engine *DockerTaskEngine) createContainer(task *api.Task, container *api.C
 	}
 
 	containerName := "ecs-" + task.Family + "-" + task.Version + "-" + name + "-" + utils.RandHex()
+	hostConfig.LogConfig.Config["awslogs-region"] = engine.cfg.AWSRegion
+	hostConfig.LogConfig.Config["awslogs-group"] = "ecs-task-log"
+	sanitizedTaskArn := strings.Split(task.Arn, "/")[1]
+	hostConfig.LogConfig.Config["awslogs-stream"] = fmt.Sprintf("%s/%s/%s/%s/%s", engine.cfg.Cluster, sanitizedTaskArn, container.Name, task.Family, task.Version)
 
 	// Pre-add the container in case we stop before the next, more useful,
 	// AddContainer call. This ensures we have a way to get the container if
